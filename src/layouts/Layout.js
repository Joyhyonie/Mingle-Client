import { useEffect, useState } from 'react';
import Header from '../components/common/Header';
import NavbarForAdmin from '../components/common/NavbarForAdmin';
import CommonCSS from '../css/common/Common.module.css';
import ToastCSS from '../css/common/Toast.module.css';
import { Outlet } from "react-router-dom";
import NavbarForProfessor from '../components/common/NavbarForProfessor';
import { toast } from 'react-hot-toast';
import { useDispatch, useSelector } from 'react-redux';
import { callGetEmployeeAPI } from '../apis/EmployeeAPICalls';

function Layout () {

    const dispatch = useDispatch();
    const { employee } = useSelector(state => state.EmployeeReducer);
    const [activeIndex, setActiveIndex] = useState();                   // ÌôúÏÑ±ÌôîÎêú ÌôîÎ©¥ÏùÑ Ïª®Ìä∏Î°§ÌïòÍ∏∞ ÏúÑÌïú state
    const [isDark, setIsDark] = useState(false);                        // Îã§ÌÅ¨Î™®Îìú ÏÑ§Ï†ïÏùÑ ÏúÑÌïú state
    const [messageModal, setMessageModal] = useState(false);            // Ï™ΩÏßÄ Î™®Îã¨ Ïª®Ìä∏Î°§ state
    const [updateNotiCount, setUpdateNotiCount] = useState('');         // ÏÉàÎ°úÏö¥ ÏïåÎ¶º ÎèÑÏ∞© Ïãú, HeaderÏóêÏÑú ÏïåÎ¶º Í∞ØÏàòÎ•º Î†åÎçîÎßÅ ÌïòÍ∏∞ÏúÑÌïú state
    const [updateMsgCount, setUpdateMsgCount] = useState('');           // ÏÉàÎ°úÏö¥ Ï™ΩÏßÄ ÎèÑÏ∞© Ïãú, HeaderÏóêÏÑú Ï™ΩÏßÄ Í∞ØÏàòÎ•º Î†åÎçîÎßÅ ÌïòÍ∏∞ÏúÑÌïú state

    useEffect(
        () => {
            dispatch(callGetEmployeeAPI());
        },[]
    );

    // SSE Íµ¨ÎèÖ ÌõÑ ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏Î≥ÑÎ°ú ÏïåÎ¶º Î∞õÍ∏∞
    useEffect(
        () => {

            const url = "http://localhost:8001";
            const token = window.localStorage.getItem('accessToken');

            if (token != null) {
                const eventSource = new EventSource(`${url}/noti/${token}`, { retry : 3000 });
                console.log("ÏÑúÎ≤ÑÎ°ú Ïù¥Î≤§Ìä∏ Íµ¨ÎèÖ ÏôÑü•≥")

                eventSource.addEventListener("receivedMsg", (e) => {
                    const data = JSON.parse(e.data);
                    const senderImg = data.sender.empProfile;
                    const senderName = data.sender.empName;
                    const msgContent = data.msgContent;
                    customMessageNoti(senderImg, senderName, msgContent);
                    setUpdateMsgCount(data);
                });

                eventSource.addEventListener("commonNoti", (e) => {
                    const data = JSON.parse(e.data);
                    const notiTitle = data.notiType.notiTitle;
                    const notiContent = data.notiContent;
                    customCommonNoti(notiTitle, notiContent);
                    setUpdateNotiCount(data);
                })
          
                eventSource.addEventListener("error", (e) => {
                    // eventSource.close();
                    console.error("SSE Ïó∞Í≤∞ Ïò§Î•ò ÏõêÏù∏ => ", e);
                    console.log("üî•üî•üî• Íµ¨ÎèÖ ... Ï∑®ÏÜå ... üî•üî•üî•");
                });
            }

        },[]
    );

    /* Ïã§ÏãúÍ∞Ñ Ï™ΩÏßÄ ÏïåÎ¶º Ïª§Ïä§ÌÖÄ Ìï®Ïàò */
    const customMessageNoti = (senderImg, senderName, msgContent) => {

        toast.custom((t) => (
            <div
                onClick={ () => setMessageModal(true)} // Ï™ΩÏßÄ ÏïåÎ¶º ÌÅ¥Î¶≠ Ïãú, Ï™ΩÏßÄ Î™®Îã¨ open
                style={{
                    cursor: "pointer",
                    opacity: t.visible ? 1 : 0,
                    transition: "opacity 300ms ease-in-out, transform 300ms ease-in-out",
                    transform: t.visible ? "translateY(0)" : "translateY(-50%)",
                }}
            >
                <div className={ ToastCSS.msgNotiBox }>
                    <div className={ ToastCSS.msgContentBox }>
                        <img src={senderImg}/>
                        <div>
                            <sub><span>{senderName}</span>ÎãòÏùò Ï™ΩÏßÄÍ∞Ä ÎèÑÏ∞©ÌñàÏäµÎãàÎã§ :)</sub>
                            <p>{msgContent ? (msgContent.length > 22 ? msgContent.slice(0, 22) + "..." : msgContent) : ""}</p>
                        </div>
                    </div>
                    <div className={ ToastCSS.closeBox } onClick={ (e) => {toast.dismiss(t.id); e.stopPropagation()}}>
                        <p>close</p>
                    </div>
                </div>
            </div>
            ),
            { duration: 5000 }
        );
    }

    /* Ïã§ÏãúÍ∞Ñ ÌïôÏÇ¨ÏùºÏ†ï, Í≥µÏßÄÏÇ¨Ìï≠ ÏïåÎ¶º Ïª§Ïä§ÌÖÄ Ìï®Ïàò  */
    const customCommonNoti = (notiTitle, notiContent) => {

        toast.custom((t) => (
            <div
                style={{
                    opacity: t.visible ? 1 : 0,
                    transition: "opacity 300ms ease-in-out, transform 300ms ease-in-out",
                    transform: t.visible ? "translateY(0)" : "translateY(-50%)",
                }}
            >
                <div className={ ToastCSS.commonNotiBox }>
                    <div className={ ToastCSS.commonContentBox }>
                        <div>
                            <sub>{notiTitle}</sub>
                            <p>{notiContent ? (notiContent.length > 24 ? notiContent.slice(0, 24) + "..." : notiContent) : ""}</p>
                        </div>
                    </div>
                    <div className={ ToastCSS.closeBox } onClick={ () => toast.dismiss(t.id)}>
                        <p>close</p>
                    </div>
                </div>
            </div>
            ),
            { duration: 5000 }
        );

    }

    // ÌòÑÏû¨ Î°úÍ∑∏Ïù∏ Ìïú Ïú†Ï†ÄÍ∞Ä ÍµêÏàò or ÌñâÏ†ïÏßÅÏõêÏù∏ÏßÄÏóê Îî∞Îùº Navbar Î≥ÄÍ≤ΩÌïòÍ∏∞ ÏúÑÌïú Î≥ÄÏàò
    const isAdmin = employee && employee.empId.startsWith('AD');

    // Î°úÍ∑∏ÏïÑÏõÉ
    const logoutHandler = () => {
        window.localStorage.removeItem('accessToken');
        toast.success('Î°úÍ∑∏ÏïÑÏõÉ ÏÑ±Í≥µ !');
        window.location.href = '/login';
    }

    return (
        <div>
            <Header setActiveIndex={setActiveIndex} 
                    isDark={isDark} 
                    setIsDark={setIsDark} 
                    logoutHandler={logoutHandler} 
                    messageModal={messageModal} 
                    setMessageModal={setMessageModal}
                    updateNotiCount={updateNotiCount}
                    updateMsgCount={updateMsgCount}/>
            <div className={ CommonCSS.flex }>
                <div className={ CommonCSS.navbarCustom }>
                { isAdmin ? 
                <NavbarForAdmin activeIndex={activeIndex} setActiveIndex={setActiveIndex} isDark={isDark}/>
                : <NavbarForProfessor activeIndex={activeIndex} setActiveIndex={setActiveIndex} isDark={isDark}/>
                }
                </div>
                <div className={ CommonCSS.outletCustom }>
                    <Outlet/>
                </div>
            </div>
        </div>
    );
}

export default Layout;